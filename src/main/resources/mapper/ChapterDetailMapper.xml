<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dianbo.liu.springCrawler.mapper.ChapterDetailMapper">
  <resultMap id="BaseResultMap" type="com.dianbo.liu.springCrawler.crawler.chapter.ChapterDetail">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="book_id" jdbcType="VARCHAR" property="bookId" />
    <result column="chapter_name" jdbcType="VARCHAR" property="chapterName" />
    <result column="chapter_url" jdbcType="VARCHAR" property="chapterUrl" />
    <result column="sort_tag" jdbcType="VARCHAR" property="sortTag" />
  </resultMap>
  <sql id="Base_Column_List">
    id, book_id, chapter_name, chapter_url, sort_tag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ding_chapter
    where id = #{id,jdbcType=INTEGER}
  </select>
  
   <select id="selectUrlsByBookId" parameterType="java.lang.String" resultType="java.lang.String">
    select 
    chapter_url
    from ding_chapter
    where book_id = #{bookId,jdbcType=VARCHAR} order by  id ASC
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ding_chapter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <!-- 批量插入 -->
  <insert id="insertChapterList"  parameterType="java.util.List">
   insert into ding_chapter (book_id,chapter_name,chapter_url)   
    values  
    <foreach collection="list" item="item" index="index" separator="," >  
        (#{item.bookId},#{item.chapterName},#{item.chapterUrl})  
    </foreach>
  </insert>
  
  <insert id="insert" parameterType="com.dianbo.liu.springCrawler.crawler.chapter.ChapterDetail">
    insert into ding_chapter (id, book_id, chapter_name, 
      chapter_url, sort_tag)
    values (#{id,jdbcType=INTEGER}, #{bookId,jdbcType=VARCHAR}, #{chapterName,jdbcType=VARCHAR}, 
      #{chapterUrl,jdbcType=VARCHAR}, #{sortTag,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="com.dianbo.liu.springCrawler.crawler.chapter.ChapterDetail">
    insert into ding_chapter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="chapterName != null">
        chapter_name,
      </if>
      <if test="chapterUrl != null">
        chapter_url,
      </if>
      <if test="sortTag != null">
        sort_tag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="chapterName != null">
        #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="chapterUrl != null">
        #{chapterUrl,jdbcType=VARCHAR},
      </if>
      <if test="sortTag != null">
        #{sortTag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dianbo.liu.springCrawler.crawler.chapter.ChapterDetail">
    update ding_chapter
    <set>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=VARCHAR},
      </if>
      <if test="chapterName != null">
        chapter_name = #{chapterName,jdbcType=VARCHAR},
      </if>
      <if test="chapterUrl != null">
        chapter_url = #{chapterUrl,jdbcType=VARCHAR},
      </if>
      <if test="sortTag != null">
        sort_tag = #{sortTag,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dianbo.liu.springCrawler.crawler.chapter.ChapterDetail">
    update ding_chapter
    set book_id = #{bookId,jdbcType=VARCHAR},
      chapter_name = #{chapterName,jdbcType=VARCHAR},
      chapter_url = #{chapterUrl,jdbcType=VARCHAR},
      sort_tag = #{sortTag,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>